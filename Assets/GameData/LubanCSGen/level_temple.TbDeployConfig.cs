
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.level_temple
{
public partial class TbDeployConfig
{
    private readonly System.Collections.Generic.Dictionary<int, DataDeployConfig> _dataMap;
    private readonly System.Collections.Generic.List<DataDeployConfig> _dataList;
    
    public TbDeployConfig(JSONNode _buf)
    {
        _dataMap = new System.Collections.Generic.Dictionary<int, DataDeployConfig>();
        _dataList = new System.Collections.Generic.List<DataDeployConfig>();
        
        foreach(JSONNode _ele in _buf.Children)
        {
            DataDeployConfig _v;
            { if(!_ele.IsObject) { throw new SerializationException(); }  _v = DataDeployConfig.DeserializeDataDeployConfig(_ele);  }
            _dataList.Add(_v);
            _dataMap.Add(_v.Id, _v);
        }
    }

    public System.Collections.Generic.Dictionary<int, DataDeployConfig> DataMap => _dataMap;
    public System.Collections.Generic.List<DataDeployConfig> DataList => _dataList;

    public DataDeployConfig GetOrDefault(int key) => _dataMap.TryGetValue(key, out var v) ? v : null;
    public DataDeployConfig Get(int key) => _dataMap[key];
    public DataDeployConfig this[int key] => _dataMap[key];

    public void ResolveRef(Tables tables)
    {
        foreach(var _v in _dataList)
        {
            _v.ResolveRef(tables);
        }
    }

}

}

